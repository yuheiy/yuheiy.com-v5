// Colors

$colors: (
	text: hsl(0 0% 13%),
	text-muted: hsl(0 0% 44%),
	primary: hsl(306 100% 69%),
	border: hsl(306 14% 94%),
	background: hsl(0 0% 100%),
	background-variant: hsl(306 14% 96%),
);

// Measure

$measure: 40;

// Text

$text-factor-at-narrow: 7;
$text-factor-narrow-viewport-width: 320;
$text-factor-at-wide: 6;
$text-factor-wide-viewport-width: 1440;

$texts: (
	base: 1rem,
	sm: calc(var(--text-factor) / (var(--text-factor) + 1) * var(--text-base)),
	lg: calc(var(--text-factor) / (var(--text-factor) - 1) * var(--text-base)),
	xl: calc(var(--text-factor) / (var(--text-factor) - 2) * var(--text-base)),
	2xl: calc(var(--text-factor) / (var(--text-factor) - 4) * var(--text-base)),
);

// Leadings

$leadings: (
	base: 1.8,
	tight: 1.5,
);

// Weights

$weights: (
	base: 400,
	bold: 700,
);

// Spaces

$space-unit: calc(var(--text-factor) / (var(--text-factor) - 4) * 0.125rem);

$spaces: (
	1: calc(1 * var(--space-unit)),
	2: calc(2 * var(--space-unit)),
	3: calc(3 * var(--space-unit)),
	4: calc(5 * var(--space-unit)),
	5: calc(8 * var(--space-unit)),
	6: calc(13 * var(--space-unit)),
	7: calc(21 * var(--space-unit)),
);

// Base

*,
::before,
::after {
	box-sizing: border-box;
}

html {
	$text-factor: $text-factor-at-narrow;
	--text-factor: #{$text-factor};

	$width: $text-factor-narrow-viewport-width;
	$media-query-steps: 100;
	$viewport-width-step: (
			$text-factor-wide-viewport-width - $text-factor-narrow-viewport-width
		) / $media-query-steps;
	$text-factor-step: ($text-factor-at-wide - $text-factor-at-narrow) /
		$media-query-steps;

	@while $width < $text-factor-wide-viewport-width {
		$width: $width + $viewport-width-step;
		$width-as-em: $width / 16 * 1em;

		@media (min-width: $width-as-em) {
			$text-factor: $text-factor + $text-factor-step;
			--text-factor: #{$text-factor};
		}
	}

	@each $name, $value in $colors {
		--color-#{$name}: #{$value};
	}

	--measure: #{$measure};

	@each $name, $value in $texts {
		--text-#{$name}: #{$value};
	}

	@each $name, $value in $leadings {
		--leading-#{$name}: #{$value};
	}

	@each $name, $value in $weights {
		--weight-#{$name}: #{$value};
	}

	--space-unit: #{$space-unit};

	@each $name, $value in $spaces {
		--space-#{$name}: #{$value};
	}

	height: 100%;
	font-family: sans-serif;
	font-size: calc(1rem + 0.1vw);
	line-height: var(--leading-base);
	line-break: normal;
	overflow-wrap: break-word;
	text-underline-offset: 0.25em;
	font-kerning: none;
}

:target {
	scroll-margin-top: var(--space-2);
}

body {
	height: 100%;
	margin: 0;
	color: var(--color-text);
	background-color: var(--color-background);
}

h1,
h2,
h3,
h4 {
	margin-top: 0;
	margin-bottom: 0;
	font-size: inherit;
	line-height: var(--leading-tight);
	font-weight: var(--weight-bold);
	font-feature-settings: "palt" 1;
	font-kerning: auto;
}

p {
	margin-top: 0;
	margin-bottom: 0;
	hanging-punctuation: allow-end;
}

hr {
	margin-bottom: 0;
	margin-bottom: 0;
	height: 1px;
	background-color: var(--color-border);
	border: 0;
}

pre[class*="language-"] {
	margin-top: 0;
	margin-bottom: 0;
	padding: var(--space-3);
	font-size: var(--text-sm);
}

ol,
ul {
	margin-top: 0;
	margin-bottom: 0;
	padding-left: 0;
}

li {
	list-style-type: none;
}

a {
	color: inherit;
	text-decoration-color: var(--color-primary);
}

a:any-link:active {
	background-color: hsla(0, 0%, 0%, 0.1);
}

em,
address {
	font-style: inherit;
}

em {
	-webkit-text-emphasis: dot;
	text-emphasis: dot;
}

samp em {
	-webkit-text-emphasis: none;
	text-emphasis: none;
	font-style: italic;
}

code,
kbd,
samp {
	font-family: monospace, monospace;
}

svg:not(:root) {
	fill: currentcolor;
}

// Utilities

@each $name, $value in $spaces {
	.mt-#{$name} {
		margin-top: var(--space-#{$name});
	}
}

@each $name, $value in $spaces {
	.pt-#{$name} {
		padding-top: var(--space-#{$name});
	}
}

@each $name, $value in $spaces {
	.pb-#{$name} {
		padding-bottom: var(--space-#{$name});
	}
}

.measure {
	max-width: calc(var(--measure) * 1em);
}

@each $name, $value in $texts {
	.text-#{$name} {
		font-size: var(--text-#{$name});
	}
}

@each $name, $value in $leadings {
	.leading-#{$name} {
		line-height: var(--leading-#{$name});
	}
}

@each $name, $value in $weights {
	.weight-#{$name} {
		font-weight: var(--weight-#{$name});
	}
}

.palt {
	font-feature-settings: "palt" 1;
	font-kerning: auto;
}

@each $name, $value in $colors {
	.color-#{$name} {
		color: var(--color-#{$name});
	}
}

@each $name, $value in $spaces {
	.stack-#{$name} > * + * {
		margin-top: var(--space-#{$name});
	}
}

.center {
	$ratio: 1.6;
	display: grid;
	grid-template-columns:
		minmax(var(--space-4), 1fr) [content] minmax(
			0,
			calc(#{$ratio} * var(--measure) * var(--text-base))
		)
		minmax(var(--space-4), #{$ratio * 1fr});
}

.center > * {
	grid-column: content;
}

@each $name,
	$value
		in (
			start: flex-start,
			end: flex-end,
			center: center,
			between: space-between
		)
{
	.justify-#{$name} {
		justify-content: $value;
	}
}

@each $name,
	$value
		in (
			start: flex-start,
			end: flex-end,
			center: center,
			baseline: baseline,
			stretch: stretch
		)
{
	.items-#{$name} {
		align-items: $value;
	}
}

@each $name, $value in $spaces {
	.gap-x-#{$name} {
		column-gap: var(--space-#{$name});
	}
}

@each $name, $value in $spaces {
	.gap-y-#{$name} {
		row-gap: var(--space-#{$name});
	}
}

.cluster {
	display: flex;
	flex-wrap: wrap;
}

.with-icon {
	display: inline-flex;
	align-items: center;
	column-gap: 0.75em;
}

.with-icon--no-space {
	column-gap: 0;
}

.with-icon > svg,
.with-icon > img {
	flex-shrink: 0;
	width: 2em;
	height: 2em;
}

// Components

.page {
	display: flex;
	flex-direction: column;
	min-height: 100%;
}

.page > * {
	flex-shrink: 0;
}

.page > :last-child {
	flex-grow: 1;
}

.header {
	border-top: 0.5rem solid var(--color-primary);
}

.header__logo {
	font-kerning: normal;
	text-transform: uppercase;
	letter-spacing: 0.025em;
}

.header__logo img {
	box-shadow: 0 0 0 1px var(--color-border);
	border-radius: 50%;
}

.footer {
	background-color: var(--color-background-variant);
}

.divider {
	height: 1px;
	background-color: var(--color-border);
}

.button {
	display: inline-flex;
	text-decoration: none;
}

.simei ruby {
	display: flex;
	flex-direction: column-reverse;
	align-items: center;
}

.simei rt {
	letter-spacing: 0.5em;
	margin-right: -0.5em;
}

.post-title::after {
	content: "";
	display: block;
	max-width: 8rem;
	height: 0.5rem;
	margin-top: var(--space-5);
	background-color: var(--color-primary);
}

.post-body p {
	max-width: calc(var(--measure) * 1em);
}

.post-body ol,
.post-body ul {
	padding-left: var(--space-4);
}

.post-body li {
	max-width: calc(var(--measure) * 1em);
	list-style-type: inherit;
}

.post-body li {
	margin-top: var(--space-1);
}

.post-body * + hr,
.post-body hr + *,
.post-body * + pre[class*="language-"],
.post-body pre[class*="language-"] + *,
.post-body .twitter-tweet + script + * {
	margin-top: var(--space-5);
}

.post-body .twitter-tweet {
	margin-top: 0 !important;
	margin-bottom: 0 !important;
}

.post-body * + .twitter-tweet {
	margin-top: var(--space-5) !important;
}
